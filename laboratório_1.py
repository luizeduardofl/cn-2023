# -*- coding: utf-8 -*-
"""Laboratório 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OByC36oFGyyR_0h91peBxQoddw-IWJjk

QUESTÃO 1
"""

import matplotlib.pyplot as plt
import numpy as np

def f(x):
  return np.log(x**2 + 1)
xg = np.arange(-0.63, -0.50, 0.1)
yg = f(xg)

plt.plot(xg, yg)
plt.grid()
plt.show()

"""QUESTÃO 2

"""

import numpy as np

def f(x):
  return np.log(x**2 + 1)

def df(x):
  return (2*x) / (x**2 + 1)

def d2f(x):
  return ((-2) * (x**2 - 1)) / ((x**2 + 1)**2)

def P2(x):
  x0 = -0.58
  h = x - x0
  return f(x0) + (df(x0) * h) + ((d2f(x0) / 2) * h**2)

P2(-1.48)

"""QUESTÃO 3"""

import numpy as np

def f(x):
  return np.log(x**2 + 1)

def df(x):
  return (2*x) / (x**2 + 1)

def d2f(x):
  return ((-2) * (x**2 - 1)) / ((x**2 + 1)**2)

def P2(x):
  x0 = -0.58
  h = x - x0
  return f(x0) + (df(x0) * h) + ((d2f(x0) / 2) * h**2)

erro = f(-1.48) - P2(-1.48)
abs(erro)

"""QUESTÃO 4

"""

import matplotlib.pyplot as plt
import numpy as np

def f(x):
  return np.log(x**2 + 1)

def df(x):
  return (2*x) / (x**2 + 1)

def d2f(x):
  return ((-2) * (x**2 - 1)) / ((x**2 + 1)**2)

def P2(x):
  x0 = -0.58
  h = x - x0
  return f(x0) + (df(x0) * h) + ((d2f(x0) / 2) * h**2)

x = np.arange(-1.6, 1.6, 0.1)
yf = f(x)
yP2 = P2(x)

plt.plot(x, yf, color = 'blue', label = 'f(x)')
plt.plot(x, yP2, color = 'red', label = 'P2(x)')
plt.title('f(x) vs P2(x)')
plt.xlabel('Eixo das abscissas')
plt.ylabel('Eixo das ordenadas')
plt.grid()
plt.legend(loc = "upper right")
plt.show()

"""QUESTÃO 5"""

import matplotlib.pyplot as plt
import numpy as np

def f(x):
  return np.log(x**2 + 1)

def df(x):
  return (2*x) / (x**2 + 1)

def d2f(x):
  return ((-2) * (x**2 - 1)) / ((x**2 + 1)**2)

def d3f(x):
  return (4*x *(x**2 - 3)) / ((x**2 + 1) **3)

def R2(tau):
  x = -1.48
  x0 = -0.58
  h = x - x0
  return (d3f(tau) / 6) * (h**3)

tau = np.arange(-1.48, -0.58, 0.01)
yTau = R2(tau)

plt.plot(tau, yTau, color = 'green')

plt.title('R2 em função de Tau')
plt.xlabel('Eixo das abscissas')
plt.ylabel('Eixo das ordenadas')
plt.grid()
plt.show()

"""QUESTÃO 6"""

import numpy as np

def f(x):
  return np.log(x**2 + 1)

def df(x):
  return (2*x) / (x**2 + 1)

def d2f(x):
  return ((-2) * (x**2 - 1)) / ((x**2 + 1)**2)

def d3f(x):
  return (4*x *(x**2 - 3)) / ((x**2 + 1) **3)

def R2(tau):
  x = -1.48
  x0 = -0.58
  h = x - x0
  return (d3f(tau) / 6) * (h**3)

abs(R2(-0.58))

"""QUESTÃO 7"""

import numpy as np

def f(x):
  return np.log(x**2 + 1)

def df(x):
  return (2*x) / (x**2 + 1)

def d2f(x):
  return ((-2) * (x**2 - 1)) / ((x**2 + 1)**2)

def d3f(x):
  return (4*x *(x**2 - 3)) / ((x**2 + 1) **3)

def P2(x):
  x0 = -0.58
  h = x - x0
  return f(x0) + (df(x0) * h) + ((d2f(x0) / 2) * h**2)

def R2(tau):
  x = -1.48
  x0 = -0.58
  h = x - x0
  return (d3f(tau) / 6) * (h**3)

erroABS = abs(f(-1.48) - P2(-1.48))
erroResto2 = abs(R2(-0.58))

erroResto2 > erroABS